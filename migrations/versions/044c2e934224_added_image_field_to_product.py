"""added image field to product

Revision ID: 044c2e934224
Revises: 1efbdcdbe008
Create Date: 2023-06-16 03:31:10.576578

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '044c2e934224'
down_revision = '1efbdcdbe008'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('products', sa.Column('image_url', sa.String(200), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('colors',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('colors_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('color_name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='colors_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('cuttings',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('cuttings_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('cutting_name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='cuttings_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('categories',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('categories_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('category_name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='categories_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('roles',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('roles_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('role_name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('role_permissions', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='roles_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('brands',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('brands_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('brand_name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='brands_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('user_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('hashed_password', sa.VARCHAR(length=1024), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=1024), autoincrement=False, nullable=False),
    sa.Column('user_name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('user_surname', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('favorite', postgresql.ARRAY(sa.INTEGER()), autoincrement=False, nullable=True),
    sa.Column('cart', postgresql.ARRAY(sa.INTEGER()), autoincrement=False, nullable=True),
    sa.Column('registration_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('is_superuser', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('is_verified', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name='user_role_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='user_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('products',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('product_name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('brand', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('category', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('material', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('material_color', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('cutting', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('stone', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('weaving', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('style', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('weight', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('cost', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('date_of_creation', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['brand'], ['brands.id'], name='products_brand_fkey'),
    sa.ForeignKeyConstraint(['category'], ['categories.id'], name='products_category_fkey'),
    sa.ForeignKeyConstraint(['cutting'], ['cuttings.id'], name='products_cutting_fkey'),
    sa.ForeignKeyConstraint(['material'], ['materials.id'], name='products_material_fkey'),
    sa.ForeignKeyConstraint(['material_color'], ['colors.id'], name='products_material_color_fkey'),
    sa.ForeignKeyConstraint(['stone'], ['stones.id'], name='products_stone_fkey'),
    sa.ForeignKeyConstraint(['style'], ['styles.id'], name='products_style_fkey'),
    sa.ForeignKeyConstraint(['weaving'], ['weavings.id'], name='products_weaving_fkey'),
    sa.PrimaryKeyConstraint('id', name='products_pkey')
    )
    op.create_table('orders',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('products_id', postgresql.ARRAY(sa.INTEGER()), autoincrement=False, nullable=False),
    sa.Column('status', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('address', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('order_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='orders_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='orders_pkey')
    )
    op.create_table('materials',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('material_name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='materials_pkey')
    )
    op.create_table('styles',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('style_name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='styles_pkey')
    )
    op.create_table('weavings',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('weaving_name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='weavings_pkey')
    )
    op.create_table('stones',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('stone_name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='stones_pkey')
    )
    # ### end Alembic commands ###
